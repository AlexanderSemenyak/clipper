<html>

<head>
    
  <script type="text/javascript" src="../../Scripts/jquery.js">
  </script>
    
  <script type="text/javascript" src="../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <script type="text/javascript" src="../../Scripts/SyntaxHighlighter/scripts/shBrushCpp.js">
  </script>
    
  <script type="text/javascript" src="../../Scripts/SyntaxHighlighter/scripts/shBrushCSharp.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../Scripts/SyntaxHighlighter/styles/shCoreDefault.css">
    
  <link type="text/css" rel="stylesheet" href="../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>Overview</title>

  <link rel="stylesheet" href="../../Styles/default.css" type="text/css">

  <meta name="Order" content="Features">

    
  <script type="text/javascript" src="../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="1" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../Images/_Home.gif" align="absmiddle">Home</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../Images/_Project_Logo.gif" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>Overview</h1>


  <p class="Body"> The <a href="../_Body.htm">Clipper Library</a> is based on but significantly extends Bala Vatti's polygon clipping algorithm as described in <a href="http://portal.acm.org/citation.cfm?id=129906" target="_blank">"A generic solution to polygon clipping"</a>, Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.<br><br> A section in <a href="http://books.google.com/books?q=vatti+clipping+agoston" target="_blank">"Computer graphics and geometric modeling: implementation and algorithms"</a> by By Max K. Agoston (Springer, 2005) discussing <em>Vatti Polygon Clipping</em> was also helpful in creating the initial Clipper implementation.<br><br> Also by way of background to the library, the paper titled <a href="http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf">"Polygon Offsetting by Computing Winding Numbers"</a> by Chen & McMains (Paper no. DETC2005-85513, ASME 2005. Pages 565-575) contains helpful discussion on the complexities of polygon offsetting together with some solutions.<br><br> This library is <b>not</b> a comprehensive geometric library. It has been created to perform <b><a href="../Units/ClipperLib/Types/ClipType.htm">boolean operations</a> on polygons</b> and <a href="../Units/ClipperLib/Routines/OffsetPolygons.htm"><b>polygon offsetting</b></a>.<br><br> Several features set Clipper apart from other polygon clipping libraries: <ol style="margin: .6em 0 .2em 1cm;  list-style: inside;">	
      
      <li>it's very fast compared to <a href="http://www.angusj.com/delphi/clipper.php#features" target="_blank">other libraries</a></li>
	  
      <li>its ability to handle self-intersecting polygons</li>
      
      <li>it's free, under its <a href="./License.htm">Boost license</a>, for both freeware and commercial applications</li>
      
      <li>its support for multiple polygon filling modes (EvenOdd, NonZero, Positive, Negative)</li>
	  
      <li>its ability to perform polygon offsetting</li>

    </ol> <br> </p>


  <p class="Body" id="terminology"> <img src="../../Images/int.png" alt="" border="0" align="right"> <b>Terminology:</b><br> 
    <ul>
  
      <li><b>Polygon Clipping:</b> This commonly refers to the process of removing from a set of <em>subject</em> polygons, any polygons or parts of polygons that are outside a rectangluar '<em>clipping</em>' window. This can be achieved by <em>intersecting</em> the subject polygons with the clip rectangle. In a more general sense, the clipping window need not be rectangular but could be any type of polygon, or even multiple polygons. Also, while clipping typically refers to an intersection operation, in this documentation it will refer to any one of the <a href="../Units/ClipperLib/Types/ClipType.htm">four boolean operations</a>.</li>
	
      <li><b>Polygon:</b> A list of vertices defining <span class="maroon">a single closed path</span>, irrespective of whether it represents an outer or inner boundary to a brush filling region. <em>Polygon</em> is also the name of a <a href="../Units/ClipperLib/Types/Polygon.htm">data structure</a> representing a list of vertices.</li>
  
      <li><b>Contour:</b> Synonymous with polygon.</li>
	
      <li><b>Hole Polygon (hole):</b> Refers to a polygon entirely within an <b>outer</b> polygon that defines an inner boundary to brush filling. The specified <a href="../Units/ClipperLib/Types/PolyFillType.htm"><b>filling rule</b></a> determines whether a polygon is a hole or another outer polygon. With <span class="maroon"><em>NonZero</em></span> filling, holes must have reverse <a href="../Units/ClipperLib/Routines/Orientation.htm"><b>orientations</b></a> to outers. With <span class="maroon"><em>Even-Odd</em></span> filling, holes are determined simply by their locations relative to other polygons such that outers contain holes and holes contain outers. (To complicate things a little, a polygon that self-intersects, or intersects with other polygons can create holes without being a <em>hole polygon</em>.)</li>

    </ul><br> </p>


  <p class="Body"> <b>Distribution package contents:</b><br><br> The ZIP package contains the Clipper library's source code, a Windows CHM help file, HTML help, and a number of compiled demo applications (with full source code). The library was initially written in <strong>Delphi Pascal</strong> (and compiles with Delphi version 7 or above) but now contains <strong>C++</strong>, <strong>C#</strong> and <strong>Python</strong> translations too. The library's source code in each language is a little under 4000 lines. The Delphi code contains reasonably extensive comments, but comments are fewer in the C++ and C# code. The included sample applications show how Clipper can be used with the different languages using a number of graphics display libraries including - <b>AGG, Cairo, OpenGL, Graphics32, GDI+</b> and <b>SVG</b>.<br><br>  </p>
      

  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../_Body.htm">Source</a>, <a href="License.htm">License</a>, <a href="../Units/ClipperLib/Classes/Clipper/_Body.htm">Clipper</a>, <a href="../Units/ClipperLib/Routines/OffsetPolygons.htm">OffsetPolygons</a>, <a href="../Units/ClipperLib/Routines/Orientation.htm">Orientation</a>, <a href="../Units/ClipperLib/Types/ClipType.htm">ClipType</a>, <a href="../Units/ClipperLib/Types/PolyFillType.htm">PolyFillType</a>, <a href="../Units/ClipperLib/Types/Polygon.htm">Polygon</a></p>
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2013 Angus Johnson&nbsp; - &nbsp; Clipper version 5.1.4 &nbsp; - &nbsp; Help file built on 26-March-2013 <br><br> </p>
  
</body>


</html>